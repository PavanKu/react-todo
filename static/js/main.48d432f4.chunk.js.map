{"version":3,"sources":["GlobalStyles.js","serviceWorker.js","constants/appConstants.js","components/Todo/Todo.context.jsx","components/Todo/Todo.styled.js","components/Header/Header.styled.js","components/Header/Header.jsx","components/TaskInput/TaskInput.styled.js","components/TaskInput/TaskInput.jsx","components/TaskInput/TaskInput.container.jsx","components/TaskList/TaskList.styled.js","components/TaskList/TaskList.jsx","components/Task/Task.styled.js","components/Task/Task.jsx","components/TaskList/TaskList.container.jsx","components/Footer/Footer.styled.js","components/Footer/Footer.jsx","components/RemainingTask/RemainingTask.styled.js","components/RemainingTask/RemainingTask.jsx","components/Tabs/Tabs.styled.js","components/Tabs/Tabs.jsx","constants/ariaConstants.js","components/ClearBtn/ClearBtn.styled.js","components/ClearBtn/ClearBtn.jsx","components/Footer/Footer.container.jsx","components/Todo/Todo.jsx","components/Todo/Todo.container.jsx","index.jsx"],"names":["GlobalStyles","createGlobalStyle","Boolean","window","location","hostname","match","TAB_OPTIONS","lastUpdatedId","INITIAL_STATE","todos","activeTab","todoReducer","state","type","payload","newTodo","id","task","isCompleted","filter","todo","ids","some","map","status","Error","TodoContext","React","createContext","TodoProvider","props","useReducer","dispatch","Provider","value","children","useTodos","context","useContext","useMemo","getTodos","getActiveTab","addTodo","removeTodos","toggleTodo","filterByStatus","StyledTodo","styled","div","StyledTodoContainer","StyledHeader","h1","Header","title","className","StyledTaskInput","input","attrs","TaskInput","placeholder","handleChange","handleOnEnter","useState","inputValue","setInputValue","useEffect","onSubmit","event","preventDefault","name","onChange","text","target","TaskInputContainer","StyledTaskList","TaskList","StyledCheckBox","checked","StyledTaskLabel","label","css","StyledTaskDelete","button","StyledTask","Task","showClose","taskId","handleDelete","handleToggle","inputChecked","setInputChecked","isCloseVisible","setIsCloseVisible","onMouseEnter","onMouseLeave","isChecked","htmlFor","onClick","TaskListContainer","filteredTodos","length","key","StyledFooter","footer","StyledRemainingContainer","StyledClearBtnContainer","show","Footer","StyledText","RemainingTask","count","StyledTabGrp","StyledTab","isActive","DEFAULT_OPTIONS","Tabs","active","options","handleClick","activeOption","setActiveOption","validOption","option","finalOptions","role","aria-selected","StyledBtn","ClearBtn","handleClear","FooterContainer","tabOptions","showFooter","remainingTaskCount","completedTaskIds","shouldShowClearBtn","Todo","heading","TodoContainer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.48d432f4.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n}\n\nbody, div, input, button {\n  font: 14px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: #f5f5f5;\n  color: #4d4d4d;\n  font-weight: 200;\n}\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const TAB_OPTIONS = {\n  ALL: \"All\",\n  ACTIVE: \"Active\",\n  COMPLETED: \"Completed\",\n};\n\nexport { TAB_OPTIONS };\n","import React, { useReducer, useMemo, useContext } from \"react\";\nimport { TAB_OPTIONS } from \"../../constants/appConstants\";\n\nconst ADD_TODO = \"ADD_TODO\";\nconst REMOVE_TODO = \"REMOVE_TODO\";\nconst TOGGLE_TODO = \"TOGGLE_TODO\";\nconst SET_STATUS_FILTER = \"SET_STATUS_FILTER\";\n\nlet lastUpdatedId = 0;\nconst INITIAL_STATE = {\n  todos: [],\n  activeTab: TAB_OPTIONS.ALL,\n};\n\nconst todoReducer = (state, { type, payload }) => {\n  switch (type) {\n    case ADD_TODO:\n      lastUpdatedId += 1;\n      const newTodo = {\n        id: lastUpdatedId,\n        task: payload.task,\n        isCompleted: false,\n      };\n      return {\n        ...state,\n        todos: [...state.todos, newTodo],\n      };\n    case REMOVE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(\n          (todo) => !payload.ids.some((id) => id === todo.id)\n        ),\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map((todo) =>\n          todo.id !== payload.id\n            ? todo\n            : { ...todo, isCompleted: !todo.isCompleted }\n        ),\n      };\n    case SET_STATUS_FILTER:\n      return {\n        ...state,\n        activeTab: payload.status,\n      };\n    default:\n      throw new Error(`todoReducer: Unsupported action type: ${type}`);\n  }\n};\n\nconst TodoContext = React.createContext();\n\nconst TodoProvider = (props) => {\n  const [state, dispatch] = useReducer(todoReducer, INITIAL_STATE);\n  return (\n    <TodoContext.Provider value={[state, dispatch]}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n};\n\nfunction useTodos() {\n  const context = useContext(TodoContext);\n  if (!context) {\n    throw new Error(\"useTodoContext must be used within TodoProvider\");\n  }\n\n  const [state, dispatch] = context;\n  const todos = useMemo(() => state.todos, [state]);\n  const activeTab = useMemo(() => state.activeTab, [state]);\n\n  function getTodos() {\n    return todos;\n  }\n\n  function getActiveTab() {\n    return activeTab;\n  }\n\n  function addTodo(task) {\n    dispatch({\n      type: ADD_TODO,\n      payload: { task },\n    });\n  }\n\n  function removeTodos(ids) {\n    dispatch({\n      type: REMOVE_TODO,\n      payload: { ids },\n    });\n  }\n\n  function toggleTodo(id) {\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: { id },\n    });\n  }\n\n  function filterByStatus(status) {\n    dispatch({\n      type: SET_STATUS_FILTER,\n      payload: { status },\n    });\n  }\n\n  return {\n    getTodos,\n    getActiveTab,\n    addTodo,\n    removeTodos,\n    toggleTodo,\n    filterByStatus,\n  };\n}\n\nexport { useTodos, TodoProvider };\n","import styled from \"styled-components\";\n\nconst StyledTodo = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledTodoContainer = styled.div`\n  width: 500px;\n`;\n\nexport default StyledTodo;\n","import styled from \"styled-components\";\n\nconst StyledHeader = styled.h1`\n  font-size: 100px;\n  text-align: center;\n  color: rgba(175, 47, 47, 0.15);\n  text-rendering: optimizeLegibility;\n  -moz-text-rendering: optimizeLegibility;\n  font-weight: 100;\n`;\n\nexport default StyledHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledHeader from \"./Header.styled\";\n\nexport const APPLICATION_DEFAULT_TITLE = \"todos\";\n\nfunction Header({ title = APPLICATION_DEFAULT_TITLE }) {\n  return <StyledHeader className=\"appTitle\">{title}</StyledHeader>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nconst StyledTaskInput = styled.input.attrs(() => ({\n  type: \"text\",\n}))`\n  padding: 16px 16px 16px 60px;\n  border: none;\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n  font-size: 24px;\n  line-height: 1.4em;\n  width: 100%;\n  outline: none;\n  background: #fefefe;\n  box-sizing: border-box;\n`;\n\nexport default StyledTaskInput;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StyledTaskInput from \"./TaskInput.styled\";\n\nexport const DEFAULT_VALUE = \"\";\nexport const DEFAULT_PLACEHOLDER = \"What needs to be done?\";\n\nfunction TaskInput({\n  value = DEFAULT_VALUE,\n  placeholder = DEFAULT_PLACEHOLDER,\n  handleChange,\n  handleOnEnter,\n}) {\n  const [inputValue, setInputValue] = useState(value);\n\n  const handleInputChange = (event) => {\n    const text = event.target.value;\n    setInputValue(text);\n    if (handleChange) {\n      handleChange(text);\n    }\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (handleOnEnter) {\n      handleOnEnter(inputValue);\n      setInputValue(DEFAULT_VALUE);\n    }\n  };\n\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <StyledTaskInput\n        name=\"task-input\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n      />\n    </form>\n  );\n}\n\nTaskInput.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleOnEnter: PropTypes.func,\n};\n\nexport default TaskInput;\n","import React from \"react\";\n\nimport { useTodos } from \"../Todo\";\nimport TaskInput from \"./TaskInput\";\n\nfunction TaskInputContainer() {\n  const { addTodo } = useTodos();\n  return <TaskInput handleOnEnter={(task) => addTodo(task)} />;\n}\n\nexport default TaskInputContainer;\n","import styled from \"styled-components\";\n\nconst StyledTaskList = styled.div`\n  padding: 10px;\n  background: #fff;\n  min-height: 200px;\n`;\n\nexport default StyledTaskList;\n","import React from \"react\";\n\nimport StyledTaskList from \"./TaskList.styled\";\n\nfunction TaskList(props) {\n  return <StyledTaskList>{props.children}</StyledTaskList>;\n}\n\nexport default TaskList;\n","import styled, { css } from \"styled-components\";\n\nexport const StyledCheckBox = styled.input.attrs((props) => ({\n  type: \"checkbox\",\n  checked: props.isCompleted,\n}))`\n  position: relative;\n  width: 0px;\n  height: 0px;\n  :before {\n    content: \"\";\n    position: absolute;\n    width: 30px;\n    height: 30px;\n    border: 1px solid #f0f0f0;\n    border-radius: 50%;\n    top: -25px;\n    left: 10px;\n    cursor: pointer;\n  }\n  :checked:after {\n    content: \"\";\n    position: absolute;\n    width: 8px;\n    height: 16px;\n    border-bottom: 2px solid #6cc9b7;\n    border-right: 2px solid #6cc9b7;\n    left: 20px;\n    top: -20px;\n    transform: rotate(45deg);\n    cursor: pointer;\n  }\n`;\nexport const StyledTaskLabel = styled.label`\n  word-break: break-all;\n  padding: 15px 15px 15px 60px;\n  display: inline-block;\n  line-height: 1.2;\n  transition: color 0.4s;\n  cursor: pointer;\n  ${(props) =>\n    props.isCompleted &&\n    css`\n      color: #d9d9d9;\n      text-decoration: line-through;\n    `}\n`;\nexport const StyledTaskDelete = styled.button`\n  position: absolute;\n  top: 0;\n  right: 10px;\n  bottom: 0;\n  width: 40px;\n  height: 40px;\n  margin: auto 0;\n  font-size: 30px;\n  color: #cc9a9a;\n  margin-bottom: 11px;\n  transition: color 0.2s ease-out;\n  border: none;\n  background: transparent;\n  outline: none;\n  cursor: pointer;\n  :after {\n    content: \"×\";\n  }\n`;\n\nconst StyledTask = styled.div`\n  position: relative;\n  font-size: 24px;\n  border-bottom: 1px solid #ededed;\n  background: #fefefe;\n`;\n\nexport default StyledTask;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StyledTask, {\n  StyledCheckBox,\n  StyledTaskLabel,\n  StyledTaskDelete,\n} from \"./Task.styled\";\n\nexport const DEFAULT_TASK_STATUS = false;\nexport const DEFAULT_TASK = \"\";\nexport const DEFAULT_SHOW_CLOSE = null;\n\nfunction Task({\n  isCompleted = DEFAULT_TASK_STATUS,\n  showClose = DEFAULT_SHOW_CLOSE,\n  task = DEFAULT_TASK,\n  taskId,\n  handleDelete,\n  handleToggle,\n}) {\n  const [inputChecked, setInputChecked] = useState(isCompleted);\n  const [isCloseVisible, setIsCloseVisible] = useState(showClose);\n\n  useEffect(() => {\n    setInputChecked(isCompleted);\n  }, [isCompleted]);\n\n  useEffect(() => {\n    setIsCloseVisible(showClose);\n  }, [showClose]);\n\n  const handleInputChange = (event) => {\n    if (handleToggle) {\n      const isChecked = event.target.checked;\n      setInputChecked(isChecked);\n      handleToggle(taskId, isChecked);\n    }\n  };\n\n  const handleRemove = () => {\n    if (handleDelete) {\n      handleDelete(taskId);\n    }\n  };\n\n  const showCloseBtn = () => {\n    if (showClose === null && !isCloseVisible) {\n      setIsCloseVisible(true);\n    }\n  };\n  const hideCloseBtn = () => {\n    if (showClose === null && isCloseVisible) {\n      setIsCloseVisible(false);\n    }\n  };\n\n  return (\n    <StyledTask onMouseEnter={showCloseBtn} onMouseLeave={hideCloseBtn}>\n      <StyledCheckBox\n        id={taskId}\n        onChange={handleInputChange}\n        isCompleted={inputChecked}\n      />\n      <StyledTaskLabel isCompleted={inputChecked} htmlFor={taskId}>\n        {task}\n      </StyledTaskLabel>\n      {isCloseVisible && <StyledTaskDelete onClick={handleRemove} />}\n    </StyledTask>\n  );\n}\n\nTask.propTypes = {\n  isCompleted: PropTypes.bool,\n  task: PropTypes.string,\n  taskId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  handleDelete: PropTypes.func,\n  handleToggle: PropTypes.func,\n  showClose: PropTypes.bool,\n};\n\nexport default Task;\n","import React, { useMemo } from \"react\";\n\nimport { useTodos } from \"../Todo\";\nimport TaskList from \"./TaskList\";\nimport { Task } from \"../Task\";\nimport { TAB_OPTIONS } from \"../../constants/appConstants\";\n\nfunction TaskListContainer() {\n  const { getTodos, getActiveTab, toggleTodo, removeTodos } = useTodos();\n  const todos = getTodos();\n\n  const activeTab = getActiveTab();\n\n  const filteredTodos = useMemo(() => {\n    switch (activeTab) {\n      case TAB_OPTIONS.ALL:\n        return todos;\n      case TAB_OPTIONS.COMPLETED:\n        return todos.filter((todo) => todo.isCompleted);\n      case TAB_OPTIONS.ACTIVE:\n        return todos.filter((todo) => !todo.isCompleted);\n      default:\n        return todos;\n    }\n  }, [activeTab, todos]);\n  if (todos.length === 0) return null;\n  return (\n    <TaskList>\n      {filteredTodos.map((todo) => (\n        <Task\n          key={todo.id}\n          taskId={todo.id}\n          task={todo.task}\n          isCompleted={todo.isCompleted}\n          handleToggle={(id, status) => toggleTodo(id, status)}\n          handleDelete={(id) => removeTodos([id])}\n        />\n      ))}\n    </TaskList>\n  );\n}\n\nexport default TaskListContainer;\n","import styled, { css } from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 15px;\n  background: #fefefe;\n`;\n\nexport const StyledRemainingContainer = styled.div`\n  flex: 1;\n  background: #fff;\n`;\n\nexport const StyledClearBtnContainer = styled.div`\n  background: #fff;\n  margin-left: 30px;\n  ${(props) =>\n    props.show &&\n    css`\n      visibility: visible;\n    `}\n  ${(props) =>\n    !props.show &&\n    css`\n      visibility: hidden;\n    `}\n`;\n\nexport default StyledFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StyledFooter from \"./Footer.styled\";\n\nconst DEFAULT_FOOTER_SHOW = false;\n\nfunction Footer({ show = DEFAULT_FOOTER_SHOW, children }) {\n  if (!show) return null;\n  return <StyledFooter>{children}</StyledFooter>;\n}\n\nFooter.propTypes = {\n  show: PropTypes.bool,\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nconst StyledText = styled.div`\n  font-size: 14px;\n  color: #777;\n  background: transparent;\n`;\n\nexport default StyledText;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledText from \"./RemainingTask.styled\";\n\nconst DEFAULT_COUNT = 0;\nexport const NO_ITEM_LEFT = \"Hurray! No item left\";\n\nfunction RemainingTask({ count = DEFAULT_COUNT }) {\n  let text = NO_ITEM_LEFT;\n  if (count && count > 0) {\n    text = `${count} ${count > 1 ? \"items\" : \"item\"} left`;\n  }\n\n  return <StyledText>{text}</StyledText>;\n}\n\nRemainingTask.propTypes = {\n  count: PropTypes.number,\n};\n\nexport default RemainingTask;\n","import styled, { css } from \"styled-components\";\n\nconst StyledTabGrp = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: transparent;\n`;\n\nexport const StyledTab = styled.button.attrs(() => ({\n  type: \"button\",\n}))`\n  padding: 3px 7px;\n  text-decoration: none;\n  border: 1px solid transparent;\n  border-radius: 3px;\n  outline: none;\n  background: transparent;\n  cursor: pointer;\n  margin-right: 6px;\n  &:last-child {\n    margin-right: 0;\n  }\n\n  ${(props) =>\n    !props.isActive &&\n    css`\n      :hover {\n        border-color: rgba(175, 47, 47, 0.1);\n      }\n    `}\n  ${(props) =>\n    props.isActive &&\n    css`\n      border-color: rgba(175, 47, 47, 0.2);\n    `};\n`;\n\nexport default StyledTabGrp;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StyledTabGrp, { StyledTab } from \"./Tabs.styled\";\nimport {\n  ARIA_ROLE_TABLIST,\n  ARIA_ROLE_TAB,\n} from \"../../constants/ariaConstants\";\n\nexport const DEFAULT_OPTIONS = [\"All\", \"Active\", \"Completed\"];\n\nfunction Tabs({ active, options = DEFAULT_OPTIONS, handleClick }) {\n  const [activeOption, setActiveOption] = useState(active);\n\n  const handleTabClick = (value) => {\n    if (handleClick && value !== activeOption) {\n      handleClick(value);\n    }\n  };\n\n  useEffect(() => {\n    let validOption = active;\n    const isValidOption = options.some((option) => option === validOption);\n    if (!isValidOption) {\n      validOption = options[0];\n    }\n    setActiveOption(validOption);\n  }, [active, options]);\n\n  const finalOptions = useMemo(() => {\n    return options.filter((option) => option);\n  }, [options]);\n\n  return (\n    <StyledTabGrp role={ARIA_ROLE_TABLIST}>\n      {finalOptions.map((option) => (\n        <StyledTab\n          key={option}\n          role={ARIA_ROLE_TAB}\n          aria-selected={option === activeOption}\n          onClick={() => handleTabClick(option)}\n          isActive={option === activeOption}\n        >\n          {option}\n        </StyledTab>\n      ))}\n    </StyledTabGrp>\n  );\n}\n\nTabs.propTypes = {\n  active: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n  handleClick: PropTypes.func,\n};\n\nexport default Tabs;\n","const ARIA_ROLE_HEADING = \"heading\";\nconst ARIA_ROLE_TEXTBOX = \"textbox\";\nconst ARIA_ROLE_CHECKBOX = \"checkbox\";\nconst ARIA_ROLE_BUTTON = \"button\";\nconst ARIA_ROLE_TABLIST = \"tablist\";\nconst ARIA_ROLE_TAB = \"tab\";\n\nconst ARIA_TAB_SELECTED_ATTRIBUTE = \"aria-selected\";\n\nexport {\n  ARIA_ROLE_HEADING,\n  ARIA_ROLE_TEXTBOX,\n  ARIA_ROLE_CHECKBOX,\n  ARIA_ROLE_BUTTON,\n  ARIA_ROLE_TABLIST,\n  ARIA_ROLE_TAB,\n  ARIA_TAB_SELECTED_ATTRIBUTE,\n};\n","import styled from \"styled-components\";\n\nconst StyledBtn = styled.button`\n  font-size: 14px;\n  color: #777;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background: none;\n  :hover {\n    text-decoration: underline;\n    text-decoration-color: #777;\n  }\n`;\n\nexport default StyledBtn;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport StyledBtn from \"./ClearBtn.styled\";\n\nexport const DEFAULT_TEXT = \"Clear completed\";\nexport const DEFAULT_SHOW = true;\n\nfunction ClearBtn({ handleClear, label = DEFAULT_TEXT, show = DEFAULT_SHOW }) {\n  const handleClick = () => {\n    if (show && handleClear) {\n      handleClear();\n    }\n  };\n\n  return (show && <StyledBtn onClick={handleClick}>{label}</StyledBtn>) || null;\n}\n\nClearBtn.propTypes = {\n  handleClear: PropTypes.func,\n  label: PropTypes.string,\n  show: PropTypes.bool,\n};\nexport default ClearBtn;\n","import React, { useMemo } from \"react\";\n\nimport { useTodos } from \"../Todo\";\nimport Footer from \"./Footer\";\nimport {\n  StyledClearBtnContainer,\n  StyledRemainingContainer,\n} from \"./Footer.styled\";\nimport { RemainingTask } from \"../RemainingTask\";\nimport { Tabs } from \"../Tabs\";\nimport { ClearBtn } from \"../ClearBtn\";\n\nimport { TAB_OPTIONS } from \"../../constants/appConstants\";\n\nfunction FooterContainer() {\n  const tabOptions = [\n    TAB_OPTIONS.ALL,\n    TAB_OPTIONS.ACTIVE,\n    TAB_OPTIONS.COMPLETED,\n  ];\n  const { getTodos, getActiveTab, removeTodos, filterByStatus } = useTodos();\n  const todos = getTodos();\n  const activeTab = getActiveTab();\n\n  const showFooter = useMemo(() => !!todos.length, [todos]);\n  const remainingTaskCount = useMemo(\n    () => todos.filter((todo) => !todo.isCompleted).length,\n    [todos]\n  );\n  const completedTaskIds = useMemo(\n    () => todos.filter((todo) => todo.isCompleted).map((todo) => todo.id),\n    [todos]\n  );\n  const shouldShowClearBtn = !!completedTaskIds.length;\n\n  return (\n    <Footer show={showFooter}>\n      <StyledRemainingContainer>\n        <RemainingTask count={remainingTaskCount} />\n      </StyledRemainingContainer>\n      <Tabs\n        handleClick={(value) => filterByStatus(value)}\n        options={tabOptions}\n        active={activeTab}\n      />\n      <StyledClearBtnContainer show={!!shouldShowClearBtn}>\n        <ClearBtn\n          label=\"Clear Completed\"\n          handleClear={() => removeTodos(completedTaskIds)}\n        />\n      </StyledClearBtnContainer>\n    </Footer>\n  );\n}\n\nexport default FooterContainer;\n","import React from \"react\";\n\nimport StyledTodo, { StyledTodoContainer } from \"./Todo.styled\";\nimport { Header } from \"../Header\";\nimport { TaskInputContainer } from \"../TaskInput\";\nimport { TaskListContainer } from \"../TaskList\";\nimport { FooterContainer } from \"../Footer\";\n\nfunction Todo({ heading }) {\n  return (\n    <StyledTodo>\n      <StyledTodoContainer>\n        <Header title={heading} />\n        <TaskInputContainer />\n        <TaskListContainer />\n        <FooterContainer />\n      </StyledTodoContainer>\n    </StyledTodo>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\n\nimport { TodoProvider } from \"./Todo.context\";\nimport Todo from \"./Todo\";\n\nconst HEADING = \"todos\";\n\nfunction TodoContainer() {\n  return (\n    <TodoProvider>\n      <Todo heading={HEADING} />\n    </TodoProvider>\n  );\n}\n\nexport default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GlobalStyles } from \"./GlobalStyles\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { TodoContainer } from \"./components/Todo\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}